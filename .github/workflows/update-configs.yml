name: Update V2Ray Configs

on:
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:

jobs:
  update-configs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4
          
      - name: Create and run script
        run: |
          mkdir -p scripts
          cat > scripts/process_configs.py << 'EOL'
          import requests
          from bs4 import BeautifulSoup
          import time
          
          def get_raw_configs():
              url = "https://raw.githubusercontent.com/roosterkid/openproxylist/refs/heads/main/V2RAY_RAW.txt"
              try:
                  response = requests.get(url)
                  response.encoding = 'utf-8'
                  if response.status_code == 200:
                      return response.text.strip().split('\n')
                  print(f"Failed to get configs. Status code: {response.status_code}")
                  return []
              except Exception as e:
                  print(f"Error getting configs: {str(e)}")
                  return []
          
          def process_configs():
              configs = get_raw_configs()
              if not configs:
                  print("No configs found!")
                  return
              
              print(f"Found {len(configs)} configs")
              
              try:
                  # First get the session and CSRF token
                  session = requests.Session()
                  base_url = "https://surfboardv2ray.pythonanywhere.com/"
                  
                  # Get initial page to set up session
                  response = session.get(base_url)
                  soup = BeautifulSoup(response.text, 'html.parser')
                  
                  # Find any hidden fields if they exist
                  hidden_fields = {}
                  for hidden in soup.find_all("input", type="hidden"):
                      hidden_fields[hidden.get('name')] = hidden.get('value')
                  
                  # Prepare form data
                  form_data = {
                      **hidden_fields,
                      'text': '\n'.join(configs)
                  }
                  
                  # Headers to mimic browser
                  headers = {
                      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
                      'Origin': base_url.rstrip('/'),
                      'Referer': base_url
                  }
                  
                  # Submit form
                  response = session.post(
                      f"{base_url}convert",
                      data=form_data,
                      headers=headers
                  )
                  
                  print(f"Response status: {response.status_code}")
                  print(f"Response headers: {dict(response.headers)}")
                  
                  if response.status_code == 200:
                      result = response.text
                      print("Successfully processed configs")
                      
                      # Save the result
                      with open('v2ray_processed.txt', 'w', encoding='utf-8') as f:
                          f.write(result)
                      print("Saved processed configs to file")
                  else:
                      print(f"Error: Server returned status code {response.status_code}")
                      print(f"Response content: {response.text}")
                  
              except Exception as e:
                  print(f"An error occurred: {str(e)}")
                  print(f"Full error details: ", e)
          
          if __name__ == "__main__":
              process_configs()
          EOL
          
          python scripts/process_configs.py
          
      - name: Commit and push if there are changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add v2ray_processed.txt
          git add scripts/process_configs.py
          git diff --staged --quiet || git commit -m "Update V2Ray configs [skip ci]"
          git push
