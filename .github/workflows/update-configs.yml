name: Update V2Ray Configs

on:
  schedule:
    - cron: '0 */4 * * *'  # Runs every 4 hours
  workflow_dispatch:  # Allows manual trigger

jobs:
  update-configs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests selenium webdriver-manager beautifulsoup4
          
      - name: Fetch and process configs
        run: |
          cat > process_configs.py << 'EOL'
          import requests
          from selenium import webdriver
          from selenium.webdriver.chrome.service import Service
          from selenium.webdriver.chrome.options import Options
          from selenium.webdriver.common.by import By
          from selenium.webdriver.support.ui import WebDriverWait
          from selenium.webdriver.support import expected_conditions as EC
          from webdriver_manager.chrome import ChromeDriverManager
          import time
          
          def get_raw_configs():
              url = "https://raw.githubusercontent.com/roosterkid/openproxylist/refs/heads/main/V2RAY_RAW.txt"
              response = requests.get(url)
              if response.status_code == 200:
                  return response.text.strip().split('\n')
              return []
          
          def setup_driver():
              chrome_options = Options()
              chrome_options.add_argument('--headless')
              chrome_options.add_argument('--no-sandbox')
              chrome_options.add_argument('--disable-dev-shm-usage')
              chrome_options.add_argument('--disable-gpu')
              
              service = Service(ChromeDriverManager().install())
              return webdriver.Chrome(service=service, options=chrome_options)
          
          def process_configs():
              configs = get_raw_configs()
              if not configs:
                  print("No configs found!")
                  return
              
              driver = setup_driver()
              try:
                  # Navigate to the load balancer page
                  driver.get("https://surfboardv2ray.pythonanywhere.com")
                  
                  # Wait for textarea to be present and insert configs
                  textarea = WebDriverWait(driver, 10).until(
                      EC.presence_of_element_located((By.CSS_SELECTOR, "textarea"))
                  )
                  textarea.send_keys('\n'.join(configs))
                  
                  # Click convert button
                  convert_button = driver.find_element(By.XPATH, "//button[contains(text(), 'Convert')]")
                  convert_button.click()
                  
                  # Wait for result
                  time.sleep(5)  # Allow time for processing
                  
                  # Get result from textarea
                  result_textarea = driver.find_element(By.CSS_SELECTOR, "textarea")
                  result = result_textarea.get_attribute('value')
                  
                  # Save the result
                  with open('v2ray_processed.txt', 'w', encoding='utf-8') as f:
                      f.write(result)
                      
                  print("Config processing completed successfully!")
                  
              except Exception as e:
                  print(f"An error occurred: {str(e)}")
              finally:
                  driver.quit()
          
          if __name__ == "__main__":
              process_configs()
          EOL
          
          python process_configs.py
          
      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser
          
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add v2ray_processed.txt
          git commit -m "Update V2Ray configs [skip ci]"
          git push
